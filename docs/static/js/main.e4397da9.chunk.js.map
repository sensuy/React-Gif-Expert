{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.jsx","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.jsx","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEXC,mBAAS,IAFE,mBAExCC,EAFwC,KAE5BC,EAF4B,KAmB/C,OACC,0BAAMC,SAZc,SAACC,GACrBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAQd,2BACCO,KAAK,OACLC,MAAOT,EACPU,SApBuB,SAACP,GAC1BF,EAAcE,EAAEQ,OAAOF,Y,uBCPZG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBC,EADgB,iDACgCC,UAAUH,GAD1C,+DAEHI,MAAMF,GAFH,cAEhBG,EAFgB,gBAGCA,EAAKC,OAHN,uBAGdC,EAHc,EAGdA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATd,kBAafM,GAbe,4CAAH,sDCCPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEpC,OACC,yBAAKc,UAAU,0CACd,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,+BAAKA,EAAL,OC0BYO,EA5BC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EAEfd,mBAAS,CAClCqB,KAAM,GACNa,SAAS,IAJ+B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAmBzC,OAZAC,qBAAU,WACTxB,EAAQC,GACNwB,MAAK,SAAAC,GAELH,EAAS,CACRf,KAAMkB,EACNL,SAAS,SAIV,CAACpB,IAEGqB,EDhBwBK,CAAa1B,GAAhCa,EAFqB,EAE1BN,KAAaa,EAFa,EAEbA,QAGpB,OACC,oCACC,wBAAIJ,UAAU,qCAAd,IAAqDhB,EAArD,KAECoB,GAAW,uBAAGJ,UAAU,oCAAb,WACZ,yBAAKA,UAAU,aAEbH,EAAOJ,KAAK,SAAAC,GAAG,OACd,kBAAC,EAAD,eACCiB,IAAKjB,EAAIC,IACLD,UEQIkB,EAxBM,WAAO,IAAD,EAEU1C,mBAAS,CAAC,cAFpB,mBAEnB2C,EAFmB,KAEP5C,EAFO,KAI1B,OACC,oCACC,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEE4C,EAAWpB,KAAI,SAAAT,GAAQ,OACtB,kBAAC,EAAD,CACC2B,IAAK3B,EACLA,SAAUA,U,MCZjB8B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.e4397da9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\r\n\tconst handleInputChange = (e) => {\r\n\t\tsetInputValue(e.target.value)\r\n\t}\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (inputValue.trim().length > 2) {\r\n\t\t\tsetCategories(cats => [inputValue, ...cats]);\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={inputValue}\r\n\t\t\t\tonChange={handleInputChange}\r\n\t\t\t/>\r\n\t\t</form>\r\n\t)\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async (category) => {\r\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=SCfw8skoqhhW8J44dmeAMBf7Ov4VVeej`;\r\n\tconst resp = await fetch(url);\r\n\tconst { data } = await resp.json();\r\n\r\n\tconst gifs = data.map(img => {\r\n\t\treturn {\r\n\t\t\tid: img.id,\r\n\t\t\ttitle: img.title,\r\n\t\t\turl: img.images?.downsized_medium.url\r\n\t\t}\r\n\t})\r\n\r\n\treturn gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n\treturn (\r\n\t\t<div className=\"card animate__animated animate__fadeIn\">\r\n\t\t\t<img src={url} alt={title} />\r\n\t\t\t<p> {title} </p>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n\tconst {data:images, loading} = useFetchGifs(category);\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className=\"animate__animated animate__fadeIn\" > {category} </h3>\r\n\r\n\t\t\t{loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\t\t\t<div className=\"card-grid\">\r\n\t\t\t\t{\r\n\t\t\t\t\timages.map((img => (\r\n\t\t\t\t\t\t<GifGridItem\r\n\t\t\t\t\t\t\tkey={img.id}\r\n\t\t\t\t\t\t\t{...img}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)))\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nGifGrid.propTypes = {\r\n\tcategory: PropTypes.string.isRequired\r\n}\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n\tconst [state, setstate] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tgetGifs(category)\r\n\t\t\t.then(imgs => {\r\n\r\n\t\t\t\tsetstate({\r\n\t\t\t\t\tdata: imgs,\r\n\t\t\t\t\tloading: false\r\n\t\t\t\t});\r\n\r\n\t\t\t})\r\n\t}, [category])\r\n\r\n\treturn state;\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n\tconst [categories, setCategories] = useState([\"One Punch\"])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>GifExpertApp</h2>\r\n\t\t\t<AddCategory setCategories={setCategories} />\r\n\t\t\t<hr />\r\n\t\t\t<ol>\r\n\t\t\t\t{\r\n\t\t\t\t\tcategories.map(category => (\r\n\t\t\t\t\t\t<GifGrid\r\n\t\t\t\t\t\t\tkey={category}\r\n\t\t\t\t\t\t\tcategory={category}\r\n\t\t\t\t\t\t />\r\n\t\t\t\t\t))\r\n\r\n\t\t\t\t}\r\n\t\t\t</ol>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport  GifExpertApp  from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}